// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: data/dailyprices/proto/daily_prices.proto

package dailyprices_pb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version   int32                `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Request) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// next id: 11
type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alpha                float64           `protobuf:"fixed64,1,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Beta                 float64           `protobuf:"fixed64,2,opt,name=beta,proto3" json:"beta,omitempty"`
	MovingAverages       map[int32]float64 `protobuf:"bytes,3,rep,name=moving_averages,json=movingAverages,proto3" json:"moving_averages,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`                      // 15, 35, 252
	MovingAverageReturns map[int32]float64 `protobuf:"bytes,10,rep,name=moving_average_returns,json=movingAverageReturns,proto3" json:"moving_average_returns,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"` // 15, 35, 252
	MovingVariance       map[int32]float64 `protobuf:"bytes,5,rep,name=moving_variance,json=movingVariance,proto3" json:"moving_variance,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`                      // 15, 35, 252
	MovingVolume         map[int32]float64 `protobuf:"bytes,8,rep,name=moving_volume,json=movingVolume,proto3" json:"moving_volume,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`                            // 15
	MovingVolumeVariance map[int32]float64 `protobuf:"bytes,9,rep,name=moving_volume_variance,json=movingVolumeVariance,proto3" json:"moving_volume_variance,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`  // 15
	Exchange             string            `protobuf:"bytes,4,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Mean                 float64           `protobuf:"fixed64,6,opt,name=mean,proto3" json:"mean,omitempty"`
	Variance             float64           `protobuf:"fixed64,7,opt,name=variance,proto3" json:"variance,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{1}
}

func (x *Stats) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *Stats) GetBeta() float64 {
	if x != nil {
		return x.Beta
	}
	return 0
}

func (x *Stats) GetMovingAverages() map[int32]float64 {
	if x != nil {
		return x.MovingAverages
	}
	return nil
}

func (x *Stats) GetMovingAverageReturns() map[int32]float64 {
	if x != nil {
		return x.MovingAverageReturns
	}
	return nil
}

func (x *Stats) GetMovingVariance() map[int32]float64 {
	if x != nil {
		return x.MovingVariance
	}
	return nil
}

func (x *Stats) GetMovingVolume() map[int32]float64 {
	if x != nil {
		return x.MovingVolume
	}
	return nil
}

func (x *Stats) GetMovingVolumeVariance() map[int32]float64 {
	if x != nil {
		return x.MovingVolumeVariance
	}
	return nil
}

func (x *Stats) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Stats) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *Stats) GetVariance() float64 {
	if x != nil {
		return x.Variance
	}
	return 0
}

// next id: 7
type Prices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open   float64 `protobuf:"fixed64,1,opt,name=open,proto3" json:"open,omitempty"`
	Close  float64 `protobuf:"fixed64,2,opt,name=close,proto3" json:"close,omitempty"`
	Low    float64 `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	High   float64 `protobuf:"fixed64,5,opt,name=high,proto3" json:"high,omitempty"`
	Volume float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *Prices) Reset() {
	*x = Prices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prices) ProtoMessage() {}

func (x *Prices) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prices.ProtoReflect.Descriptor instead.
func (*Prices) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{2}
}

func (x *Prices) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Prices) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Prices) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Prices) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Prices) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// next id: 5
type DailyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version   int32                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Prices    map[string]*Prices   `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Stats     map[string]*Stats    `protobuf:"bytes,4,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DailyData) Reset() {
	*x = DailyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyData) ProtoMessage() {}

func (x *DailyData) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyData.ProtoReflect.Descriptor instead.
func (*DailyData) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{3}
}

func (x *DailyData) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DailyData) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DailyData) GetPrices() map[string]*Prices {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *DailyData) GetStats() map[string]*Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lb *timestamp.Timestamp `protobuf:"bytes,1,opt,name=lb,proto3" json:"lb,omitempty"`
	Ub *timestamp.Timestamp `protobuf:"bytes,2,opt,name=ub,proto3" json:"ub,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{4}
}

func (x *Range) GetLb() *timestamp.Timestamp {
	if x != nil {
		return x.Lb
	}
	return nil
}

func (x *Range) GetUb() *timestamp.Timestamp {
	if x != nil {
		return x.Ub
	}
	return nil
}

type TradingDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamps []*timestamp.Timestamp `protobuf:"bytes,1,rep,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *TradingDates) Reset() {
	*x = TradingDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingDates) ProtoMessage() {}

func (x *TradingDates) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingDates.ProtoReflect.Descriptor instead.
func (*TradingDates) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{5}
}

func (x *TradingDates) GetTimestamps() []*timestamp.Timestamp {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

type NewSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimRange *Range `protobuf:"bytes,1,opt,name=sim_range,json=simRange,proto3" json:"sim_range,omitempty"` // TODO: Add other modes/configuration here.
}

func (x *NewSessionRequest) Reset() {
	*x = NewSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSessionRequest) ProtoMessage() {}

func (x *NewSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSessionRequest.ProtoReflect.Descriptor instead.
func (*NewSessionRequest) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{6}
}

func (x *NewSessionRequest) GetSimRange() *Range {
	if x != nil {
		return x.SimRange
	}
	return nil
}

type NewSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewSessionResponse) Reset() {
	*x = NewSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSessionResponse) ProtoMessage() {}

func (x *NewSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_dailyprices_proto_daily_prices_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSessionResponse.ProtoReflect.Descriptor instead.
func (*NewSessionResponse) Descriptor() ([]byte, []int) {
	return file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP(), []int{7}
}

var File_data_dailyprices_proto_daily_prices_proto protoreflect.FileDescriptor

var file_data_dailyprices_proto_daily_prices_proto_rawDesc = []byte{
	0x0a, 0x29, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x65, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0f,
	0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6d,
	0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x62, 0x0a,
	0x16, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x6d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x62, 0x0a,
	0x16, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x6d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x41, 0x0a,
	0x13, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x47, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x4d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a,
	0x19, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x70, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xf2, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a,
	0x4e, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x4c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a,
	0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x02, 0x6c, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x6c, 0x62, 0x12, 0x2a, 0x0a, 0x02, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x75, 0x62, 0x22, 0x4a,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x4e, 0x65,
	0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x09, 0x73, 0x69, 0x6d, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x73, 0x69, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd6, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x1a, 0x19, 0x2e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x73, 0x22, 0x00, 0x42,
	0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x2d,
	0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x79, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x5f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_dailyprices_proto_daily_prices_proto_rawDescOnce sync.Once
	file_data_dailyprices_proto_daily_prices_proto_rawDescData = file_data_dailyprices_proto_daily_prices_proto_rawDesc
)

func file_data_dailyprices_proto_daily_prices_proto_rawDescGZIP() []byte {
	file_data_dailyprices_proto_daily_prices_proto_rawDescOnce.Do(func() {
		file_data_dailyprices_proto_daily_prices_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_dailyprices_proto_daily_prices_proto_rawDescData)
	})
	return file_data_dailyprices_proto_daily_prices_proto_rawDescData
}

var file_data_dailyprices_proto_daily_prices_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_data_dailyprices_proto_daily_prices_proto_goTypes = []interface{}{
	(*Request)(nil),             // 0: dailyprices.Request
	(*Stats)(nil),               // 1: dailyprices.Stats
	(*Prices)(nil),              // 2: dailyprices.Prices
	(*DailyData)(nil),           // 3: dailyprices.DailyData
	(*Range)(nil),               // 4: dailyprices.Range
	(*TradingDates)(nil),        // 5: dailyprices.TradingDates
	(*NewSessionRequest)(nil),   // 6: dailyprices.NewSessionRequest
	(*NewSessionResponse)(nil),  // 7: dailyprices.NewSessionResponse
	nil,                         // 8: dailyprices.Stats.MovingAveragesEntry
	nil,                         // 9: dailyprices.Stats.MovingAverageReturnsEntry
	nil,                         // 10: dailyprices.Stats.MovingVarianceEntry
	nil,                         // 11: dailyprices.Stats.MovingVolumeEntry
	nil,                         // 12: dailyprices.Stats.MovingVolumeVarianceEntry
	nil,                         // 13: dailyprices.DailyData.PricesEntry
	nil,                         // 14: dailyprices.DailyData.StatsEntry
	(*timestamp.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_data_dailyprices_proto_daily_prices_proto_depIdxs = []int32{
	15, // 0: dailyprices.Request.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 1: dailyprices.Stats.moving_averages:type_name -> dailyprices.Stats.MovingAveragesEntry
	9,  // 2: dailyprices.Stats.moving_average_returns:type_name -> dailyprices.Stats.MovingAverageReturnsEntry
	10, // 3: dailyprices.Stats.moving_variance:type_name -> dailyprices.Stats.MovingVarianceEntry
	11, // 4: dailyprices.Stats.moving_volume:type_name -> dailyprices.Stats.MovingVolumeEntry
	12, // 5: dailyprices.Stats.moving_volume_variance:type_name -> dailyprices.Stats.MovingVolumeVarianceEntry
	15, // 6: dailyprices.DailyData.timestamp:type_name -> google.protobuf.Timestamp
	13, // 7: dailyprices.DailyData.prices:type_name -> dailyprices.DailyData.PricesEntry
	14, // 8: dailyprices.DailyData.stats:type_name -> dailyprices.DailyData.StatsEntry
	15, // 9: dailyprices.Range.lb:type_name -> google.protobuf.Timestamp
	15, // 10: dailyprices.Range.ub:type_name -> google.protobuf.Timestamp
	15, // 11: dailyprices.TradingDates.timestamps:type_name -> google.protobuf.Timestamp
	4,  // 12: dailyprices.NewSessionRequest.sim_range:type_name -> dailyprices.Range
	2,  // 13: dailyprices.DailyData.PricesEntry.value:type_name -> dailyprices.Prices
	1,  // 14: dailyprices.DailyData.StatsEntry.value:type_name -> dailyprices.Stats
	0,  // 15: dailyprices.Data.Get:input_type -> dailyprices.Request
	6,  // 16: dailyprices.Data.NewSession:input_type -> dailyprices.NewSessionRequest
	4,  // 17: dailyprices.Data.TradingDatesInRange:input_type -> dailyprices.Range
	3,  // 18: dailyprices.Data.Get:output_type -> dailyprices.DailyData
	7,  // 19: dailyprices.Data.NewSession:output_type -> dailyprices.NewSessionResponse
	5,  // 20: dailyprices.Data.TradingDatesInRange:output_type -> dailyprices.TradingDates
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_data_dailyprices_proto_daily_prices_proto_init() }
func file_data_dailyprices_proto_daily_prices_proto_init() {
	if File_data_dailyprices_proto_daily_prices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_dailyprices_proto_daily_prices_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_dailyprices_proto_daily_prices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_dailyprices_proto_daily_prices_proto_goTypes,
		DependencyIndexes: file_data_dailyprices_proto_daily_prices_proto_depIdxs,
		MessageInfos:      file_data_dailyprices_proto_daily_prices_proto_msgTypes,
	}.Build()
	File_data_dailyprices_proto_daily_prices_proto = out.File
	file_data_dailyprices_proto_daily_prices_proto_rawDesc = nil
	file_data_dailyprices_proto_daily_prices_proto_goTypes = nil
	file_data_dailyprices_proto_daily_prices_proto_depIdxs = nil
}
