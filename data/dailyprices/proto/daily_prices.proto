syntax = "proto3";

option go_package = "github.com/d-sparks/gravy/data/dailyprices/proto;dailyprices_pb";

import "google/protobuf/timestamp.proto";

package dailyprices;

service Data {
  rpc Get(Request) returns (DailyPrices) {}

  rpc NewSession(NewSessionRequest) returns (NewSessionResponse) {}

  rpc TradingDatesInRange(Range) returns (TradingDates) {}
}

message Request {
  google.protobuf.Timestamp timestamp = 1;
  int32 version = 2;
}

// next id: 6
message Measurements {
  double alpha = 1;
  double beta = 2;
  map<int32, double> moving_averages = 3;
}

// next id: 5
message DailyPrices {
  google.protobuf.Timestamp timestamp = 2;
  int32 version = 3;

  message StockPrices {
    double open = 1;
    double close = 2;
    double low = 4;
    double high = 5;
    double volume = 6;
  }

  map<string, StockPrices> stock_prices = 1;
  map<string, Measurements> measurements = 4;
  double benchmark = 5;  // SPY benchmark, 252 trading day performance.
}

message Range {
  google.protobuf.Timestamp lb = 1;
  google.protobuf.Timestamp ub = 2;
}

message TradingDates {
  repeated google.protobuf.Timestamp timestamps = 1;
}

message NewSessionRequest {
  Range sim_range = 1;
  // TODO: Add other modes/configuration here.
}

message NewSessionResponse {

}