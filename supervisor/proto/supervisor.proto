syntax = "proto3";

option go_package = "github.com/d-sparks/gravy/supervisor/proto;supervisor_pb";

import "google/protobuf/timestamp.proto";

package supervisor;

service Supervisor {
  rpc PlaceOrder(Order) returns (OrderConfirmation) {}

  rpc GetPortfolio(AlgorithmId) returns (Portfolio) {}

  rpc OpenPosition(OpenPositionInput) returns (PositionSpec) {}

  rpc ClosePosition(PositionSpec) returns (ClosePositionResponse) {}

  rpc DoneTrading(AlgorithmId) returns  (DoneTradingResponse) {}

  rpc SynchronousDailySim(SynchronousDailySimInput) returns (SynchronousDailySimOutput) {}

  rpc Abort(AbortInput) returns (AbortOutput) {}
}

// IDs and specs.
message AlgorithmId {
  string algorithm_id = 1;
}

message AlgorithmSpec { 
  AlgorithmId id = 1;
  string url = 2;
}

message OpenPositionInput {
  AlgorithmId algorithm_id = 1;
  repeated string ticker = 2;
}

message PositionSpec {
  uint64 id = 1;
  AlgorithmId algorithm_id = 2;
}

// Trading interfaces.
message Order {
  AlgorithmId algorithm_id = 1;
  string ticker = 2;
  double volume = 3;
  double limit = 4;
  double stop = 5;
  PositionSpec position = 6;
}

message OrderConfirmation {
}

message Portfolio {
  map<string, double> stocks = 1;
  double usd = 2;
}

message ClosePositionResponse {
}

message DoneTradingResponse {
}

// Orchestration interfaces.
message SynchronousDailySimInput {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
  string output_dir = 3;
  repeated AlgorithmSpec algorithms = 4;
}

message SynchronousDailySimOutput {
}

message AbortInput {
}

message AbortOutput {
}